<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8"/>
  <title>Dessin SVG dynamique</title>
  <!-- voir https://greensock.com/docs/v3/Installation#installer -->
  <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>
</head>
<body>
  <!-- dessin SVG créé et modifié par les scripts JS -->
  <svg xmlns="http://www.w3.org/2000/svg"
       viewBox="0 0 200 200"
       width="100%"
       id="dessin">
  </svg>

  <!-- utilisation du mixin SVGelement -->
  <script src="svgelement.js"></script>

  <script>

/** Représente et dessine une led dans un SVG */
class Led {
    constructor(parent, x, y, radius) {
        this.led = parent.appendElement("circle", {
            cx: x, cy: y, 
            r: radius - radius/16,
            fill: "gray",
            stroke: "black",
            'stroke-width': radius/8
        })
    }
}

/** Représente et dessine un ruban horizontal de leds dans un SVG */
class LedRibbon {
    constructor(parent, number, x, y, radius, spacing=0) {
      
        // liste des leds créées par ce ruban
        var led1 = new Led(parent, x, y, radius);
        var led2 = new Led(parent, (x + (radius * 2 + spacing)), y, radius);
        var led3 = new Led(parent,x + (radius * 2 + spacing) * 2, y, radius);
        var led4 = new Led(parent,x + (radius * 2 + spacing) * 3, y, radius);
        
        this.leds = [led1, led2, led3, led4];
    }
}
  
// compléments à la librairie Math
Math.radians = (deg) => deg * Math.PI / 180
Math.degrees = (rad) => rad / Math.PI * 180

// dessin SVG
const svg = SVGelement.fromSelector("#dessin")
// dessiner une led
const led = new Led(svg, 50, 50, 16)

// dessiner un ruban de leds
const ribbon = new LedRibbon(svg, 8, 8, 8, 4)

  </script>
</body>
</html>